version: '3.8'

services:
  db:
    image: postgis/postgis:13-3.1
    container_name: school-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: school
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  importer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  #importer:
  #  image: python:3.10-slim
  #  container_name: dxf-importer
  #  depends_on:
  #    db:
  #      condition: service_healthy
  #  working_dir: /work
  #  volumes:
  #    - ./scripts:/work:ro
  #  entrypoint:
  #    - bash
  #    - -lc
  #    - |
  #      set -eux
  #      # System-Paketbrowser aktualisieren, Postgres-Client nachinstallieren:
  #      apt-get update
  #      apt-get install -y --no-install-recommends postgresql-client
  #      rm -rf /var/lib/apt/lists/*
  #      # Python-Libs installieren
  #      pip install --no-cache-dir \
  #        numpy==1.26.4 \
  #        shapely==2.0.3 \
  #        scikit-learn==1.4.2 \
  #        ezdxf \
  #        psycopg2-binary
  #      # Warten, bis Postgres bereit ist
  #      until pg_isready -h db -U postgres; do sleep 1; done
  #      # Import-Skript unbuffered ausf√ºhren
  #      python -u import_dxf.py Grundriss_erweitert.dxf
  #  restart: "no"
volumes:
  db-data: